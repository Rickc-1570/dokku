#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/config/functions"

tar_build() {
  declare desc="builds apps from tarball via command line"
  local APP="$1"; verify_app_name "$APP"
  shift 1

  # clean up after ourselves
  local TAR_BUILD_TMP_WORK_DIR=$(mktemp -d "/tmp/dokku_tar.XXXX")
  trap 'rm -rf "$TAR_BUILD_TMP_WORK_DIR" > /dev/null' RETURN INT TERM EXIT

  # extract tar file
  chmod 755 "$TAR_BUILD_TMP_WORK_DIR"
  pushd "$TAR_BUILD_TMP_WORK_DIR" > /dev/null

  # Detect a common prefix that all files in the tar have, and strip off each directory found in it
  local COMMON_PREFIX=$(tar -tf "$DOKKU_ROOT/$APP/src.tar" | sed -e 'N;s/^\(.*\).*\n\1.*$/\1\n\1/;D')
  local BOGUS_PARTS=$(echo "$COMMON_PREFIX " | awk 'BEGIN{FS="/"} {print NF-1}')

  dokku_log_info1_quiet "Striping $BOGUS_PARTS worth of directories from tarball"

  tar -x -C "$TAR_BUILD_TMP_WORK_DIR" -f "$DOKKU_ROOT/$APP/src.tar" --strip-components="$BOGUS_PARTS"
  chmod -R u+r "$TAR_BUILD_TMP_WORK_DIR"

  plugn trigger post-extract "$APP" "$TAR_BUILD_TMP_WORK_DIR"

  local DOKKU_APP_TYPE
  DOKKU_APP_TYPE="$(config_get "$APP" DOKKU_APP_TYPE || true)"
  DOKKU_APP_TYPE="$(plugn trigger build-type "$APP" "$DOKKU_APP_TYPE" "$TAR_BUILD_TMP_WORK_DIR")"
  plugn trigger pre-receive-app "$APP" "$DOKKU_APP_TYPE" "$TAR_BUILD_TMP_WORK_DIR"
  dokku_receive "$APP" "$DOKKU_APP_TYPE" "$TAR_BUILD_TMP_WORK_DIR" | sed -u "s/^/"$'\e[1G'"/"
}

tar_in_cmd() {
  declare desc="deploys app from tarball on STDIN via command line"
  local cmd="tar:in"
  local APP="$2"

  verify_app_name "$2"
  tee "$DOKKU_ROOT/$APP/src.tar" | wc -c
  plugn trigger receive-app "$APP"
}

tar_from_cmd() {
  declare desc="deploys app from tarball at URL via command line"
  local cmd="tar:from"
  verify_app_name "$2"
  local APP=$2
  local URL=$3
  shift 3
  curl -# --insecure -L "$URL" | tar_in_cmd "tar:in" "$APP" "$@"
}
