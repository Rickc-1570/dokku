#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_PATH/common/functions"

case "$1" in
  delete)
    dokku apps:destroy $2
    ;;

  ls)
    apps=$(ls -d $DOKKU_ROOT/*/ 2>/dev/null) || (echo "You haven't depoyed any applications yet" && exit 1)

    dokku_col_log_info2_quiet "App Name" "Container id"

    for app in $apps; do
      if [[ -f $app/CONTAINER ]]; then
        dokku_col_log_msg "$(basename $app)" "$(< $app/CONTAINER)"
      else
        dokku_col_log_msg "$(basename $app)"
      fi
    done
    ;;

  logs)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    verify_app_name "$2"
    APP="$2";

    if [[ -f "$DOKKU_ROOT/$APP/CONTAINER" ]]; then
      CONTAINER=$(<$DOKKU_ROOT/$APP/CONTAINER)
      if [[ $3 == "-t" ]]; then
        docker logs --follow $CONTAINER
      else
        docker logs $CONTAINER | tail -n 100
      fi
    else
      echo "Application's container not found"
    fi
    ;;

  url | urls)
      [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
      verify_app_name "$2"
      APP="$2";

      if [[ -s "$DOKKU_ROOT/$APP/URLS" ]]; then
        case "$1" in
          url)
            grep "^http" "$DOKKU_ROOT/$APP/URLS" | head -1
          ;;
          urls)
            grep "^http" "$DOKKU_ROOT/$APP/URLS"
          ;;
        esac

        exit 0
      fi

      SCHEME="http"; SSL="$DOKKU_ROOT/$APP/tls"; WILDCARD_SSL="$DOKKU_ROOT/tls"
      if [[ -e "$SSL/server.crt" && -e "$SSL/server.key" ]] || [[ -e "$WILDCARD_SSL/server.crt" && -e "$WILDCARD_SSL/server.key" ]]; then
        SCHEME="https"
      fi

      if [[ -f "$DOKKU_ROOT/VHOST" ]]; then
        echo "$SCHEME://$(< "$DOKKU_ROOT/VHOST")"
      else
        echo "$SCHEME://$(< "$DOKKU_ROOT/HOSTNAME"):$(< "$DOKKU_ROOT/$APP/PORT")"
      fi
    ;;

  help)
    ;;

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;

esac
