#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_PATH/common/functions"

APP="$2"; IMAGE="dokku/$APP"; IMAGE_SOURCE_TYPE="$3"
case "$IMAGE_SOURCE_TYPE" in
  buildstep)
    # *DEPRECATED* in v0.4.0: `pluginhook pre-release` will be removed in future releases
    pluginhook pre-release "$APP"
    pluginhook pre-release-buildstep "$APP"
    if [[ -f "$DOKKU_ROOT/ENV" ]]; then
      id=$(docker run -i -a stdin $IMAGE /bin/bash -c "mkdir -p /app/.profile.d && cat > /app/.profile.d/00-global-env.sh" < "$DOKKU_ROOT/ENV")
      test "$(docker wait $id)" -eq 0
      docker commit $id $IMAGE > /dev/null
    fi
    if [[ -f "$DOKKU_ROOT/$APP/ENV" ]]; then
      id=$(docker run -i -a stdin $IMAGE /bin/bash -c "mkdir -p /app/.profile.d && cat > /app/.profile.d/01-app-env.sh" < "$DOKKU_ROOT/$APP/ENV")
      test "$(docker wait $id)" -eq 0
      docker commit $id $IMAGE > /dev/null
    fi
    # *DEPRECATED* in v0.4.0: `pluginhook post-release` will be removed in future releases
    pluginhook post-release "$APP"
    pluginhook post-release-buildstep "$APP"
    ;;

  dockerfile)
    # buildstep pluginhooks don't necessarily make sense for dockerfiles. call the new breed!!!
    pluginhook pre-release-dockerfile "$APP"
    pluginhook post-release-dockerfile "$APP"
    ;;

  *)
    dokku_log_fail "Releasing image source type $IMAGE_SOURCE_TYPE not supported!"
    ;;
esac
